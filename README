Using the yesterday weather technique means estimate the velocity of the team looking at the history, for instance using the velocity of the last sprint.
Actually it is simply a matter of dividing the story points (initial estimates) with the actual days for all the story so getting a "focus factor".

The next sprint velocity could then be estimated multiplying all the story points with the focus factor. If the focus factor is 50%, then the team will add one half of the stories respect of their initial estimates.

(A slightly sophisticated variant is considering also the available man-days)

All those things are explained in "scrum and xp from the trenches"

This code will suggest that the stories will also tagged, so focus factor can be different by different tags.

The team can realize that all the stories tagged as “back end logic” has been realized in twice the time respect to the initial estimations, so looking at them, the focus factor should be 50%.
However may be that the team estimated correctly the u.i. stories, and then looking at the velocity for the u.i. The focus factor is 100%, so if in the next sprint there will be a lot of stories about u.i., then the team expects to be faster.

Examples:
// create stories
        Story fragola = storiesFactory.createStory("fragola",10,"fruit"); 
        Story coke = storiesFactory.createStory("coke",10,"liquid");
	….

// create product backlog and add stories
        ProductBacklog productBacklog = new ProductBacklog("my product");
        productBacklog.add(fragola);
        productBacklog.add(coke);


// create sprint backlog from the product backlog, with two stories
        SprintBacklog firstSprint = productBacklog.produceSprint("firstSprint","fragola","coke");

// set actuls for the stories done
        firstSprint.setDone("fragola",20);  // twice respect to the initial estimations
        firstSprint.setDone("coke",10); // as the initial estimation
	…
// get the actual focus factor by tags
        assertEquals(0.5,firstSprint.actualFocusFactoryByTag("fruit"),0.1);
        assertEquals(1,firstSprint.actualFocusFactoryByTag("liquid"),0.1);


